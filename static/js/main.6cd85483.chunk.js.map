{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","PropTypes","string","isRequired","func","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","Axios","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cd85483.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/$\n    {id}`);\n      dispatch({\n        type: 'DELETE_CONTACT',\n        payload: id\n      });\n    } catch (e) {\n      dispatch({\n        type: 'DELETE_CONTACT',\n        payload: id\n      });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Email:\n                    {email}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Phone:\n                    {phone}\n                  </li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\"> Contact </span>\n                List\n              </h1>\n\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.PropTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //Check for Errors\n\n    if (name === '') {\n      this.setState({\n        errors: { name: 'Name is required' }\n      });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({\n        errors: { email: 'Email is required' }\n      });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({\n        errors: { phone: 'Phone is required' }\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    //Clear the forms to a past State (clearing the form fields)\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport Axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await Axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //Check for Errors\n\n    if (name === '') {\n      this.setState({\n        errors: { name: 'Name is required' }\n      });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({\n        errors: { email: 'Email is required' }\n      });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({\n        errors: { phone: 'Phone is required' }\n      });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await Axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    //Clear the forms to a past State (clearing the form fields)\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default EditContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav\n      className=\"navbar navbar-expand-sm\n    navbar-dark bg-danger mb-3 py-0\"\n    >\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'MyApp'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  // componentWillMount() {\n  //   console.log('componentWillMount...');\n  // }\n\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate...');\n  // }\n\n  // componentWillUpdate() {\n  //   console.log('componentWillUpdate...');\n  // }\n\n  // componentWillReceiveProps(nextProps, nextState) {\n  //   console.log('componentWillReceiveProps...');\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     test: 'something'\n  //   };\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('getSnapshotBeforeUpdate...');\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n\n                <Route exact path=\"/contact/add\" component={AddContact} />\n\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n\n                <Route exact path=\"/about\" component={About} />\n\n                <Route exact path=\"/test\" component={Test} />\n\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}